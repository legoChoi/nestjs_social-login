# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Menu {
  id: String!
  menuMainCategory: [MenuMainCategory!]!
  store: Store!
  name: String!
}

type MenuMainCategory {
  id: String!
  menu: Menu!
  mainCategory: MainCategory!
}

type MainCategory {
  id: String!
  menuMainCategory: [MenuMainCategory!]!
  store: Store!
  name: String!
}

type UserStoreCoupon {
  id: String!
  storeCoupon: StoreCoupon!
  user: User!
}

type StoreCoupon {
  id: String!
  userStoreCoupon: [UserStoreCoupon!]!
  store: Store!
}

type StoreImage {
  id: String!
  url: String!
}

type Tag {
  id: String!
  name: String!
}

type StoreTag {
  id: String!
  store: Store!
  tag: Tag!
  tagName: String!
}

type Store {
  id: String!
  name: String!
  menu: [Menu!]!
  mainCategory: [MainCategory!]!
  storeTag: [StoreTag!]!
  storeImage: [StoreImage!]!
  bookmark: [Bookmark!]!
  storeCoupon: [StoreCoupon!]!
}

type Bookmark {
  id: String!
  store: Store!
  user: User!
}

type Point {
  id: String!
  user: User!
  by: String!
  type: Int!
  value: Int!
  remainPoint: Int!
}

type UserPosition {
  id: String!
  lat: Float!
  lng: Float!
  isSelected: Boolean!
  user: User!
}

type User {
  id: String!
  point: [Point!]!
  bookmark: [Bookmark!]!
  userPosition: [UserPosition!]!
  userStoreCoupon: [UserStoreCoupon!]!
  phone: String!
  nick: String!
  gender: Boolean!
  birth: String!
}

type SmsToken {
  id: String!
  phone: String!
  token: String!
  isAuth: Boolean!
  isValid: Boolean!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  fetchSMSAuthLast(phone: String!): SmsToken!

  """[포인트 내역] 포인트 내역 리스트 가져오기"""
  fetchAllUserPoint(userId: String!): [Point!]!

  """[매장 리스트] 매장 리스트 가져오기"""
  fetchStoreList: [Store!]!

  """[매장 상세] 매장 상세 가져오기"""
  fetchOneStoreByStoreId(storeId: String!): Store!
  fetchAllCategoryAndMenu(storeId: String!): [MainCategory!]!

  """[매장 상세 - 메뉴 탭] 메뉴 리스트 가져오기"""
  fetchAllMenu(storeId: String!): [Menu!]!

  """북마크 가게로 이동"""
  moveToBoolmark: String!

  """북마크 가게 모두 가져오기"""
  fetchAllBookmark(userId: String!): [Bookmark!]!
}

type Mutation {
  """[TEST] 회원 가입"""
  createUser(phone: String!, nick: String!, gender: Boolean!, birth: String!): User!

  """Access Token 재발급"""
  restoreRefreshToken: String!

  """SMS 인증번호 요청"""
  requestSMSAuth(phone: String!): SmsToken!

  """SMS 인증번호 검증"""
  responseSMSAuth(phone: String!, token: String!, userId: String!): SmsToken!

  """[결제 화면] 포인트 지급"""
  createPointForUser(userId: String!, by: String!, value: Float!): Point!

  """[TEST] 매장 생성"""
  createStore(name: String!): String!
  createMainCategory(name: String!, storeId: String!): MainCategory!

  """[TEST] 메뉴 생성"""
  createMenu(name: String!, storeId: String!): Menu!
  connectMenuMainCategory(menuId: String!, mainCategoryId: String!): MenuMainCategory!

  """북마크 설정"""
  createBookmark(userId: String!, storeId: String!): Bookmark!

  """북마크 삭제"""
  deleteBookmark: String!

  """[TEST] 태그 생성"""
  createTag(name: String!): Tag!

  """가게와 태그 연결"""
  connectTagWithStore(createStoreTagInput: CreateStoreTagInput!): StoreTag!
  createUserPosition(userId: String!, lat: String!, lng: String!): UserPosition!
}

input CreateStoreTagInput {
  storeId: String!
  tagId: String!
}